---
name: Build and Push Python Image to Google Cloud Platform
on:
  push:
    branches: [ main ]
jobs:
  build-push-gcr:
    name: Build and Push to GCP
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: flaskapi
      PROJECT_ID: point-cloud-mt
      REPOSITORY_NAME: github-actions
      DOCKER_PKG_LOCATION: europe-west2-docker.pkg.dev
      
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: install the gcloud cli
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: point-cloud-mt
        service_account_key: ${{ secrets.POINT_CLOUD_MT_SA_KEY }}
        install_components: 'gke-gcloud-auth-plugin'
        export_default_credentials: true  

    # - id: 'auth'
    # - name: 'Authenticate to Google Cloud'
    #   uses: 'google-github-actions/auth@v0.4.0'
    #   with:
    #     credentials_json: '${{ secrets.POINT_CLOUD_MT_SA_KEY}}'  
   
    - name: Push Docker Image to Artifact Registry
      # env: 
      #   GOOGLE_PROJECT=${{ env.PROJECT_ID }}    
      run: |-
        gcloud auth configure-docker europe-west2-docker.pkg.dev
        docker  build -t europe-west2-docker.pkg.dev/point-cloud-mt/github-actions/flaskapi:latest .
        credential helper - run: | gcloud auth configure-docker -q
        docker push europe-west2-docker.pkg.dev/point-cloud-mt/github-actions/flaskapi:latest 
    - name: deploy to gke      
      run: |
        gcloud container clusters get-credentials cluster-1 --zone europe-west2-b      
        kubectl apply -f gke-deployment.yaml    

  # gcloud auth configure-docker ${{ env.PROJECT_ID }}
  # docker  build -t ${{ env.DOCKER_PKG_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:latest .
  # credential helper - run: | gcloud auth configure-docker -q
  # docker push ${{ env.DOCKER_PKG_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:latest

 # - name: install the gcloud CLI
    #   uses: google-github-actions/setup-gcloud@main 
    #   with: 
    #     service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
    #     project_id: ${{ env.PROJECT_ID }}
    #     export_default_credentials: true

    
          

    # - name: Build Docker Image
    #   run: docker build -t $IMAGE_NAME:latest .

   
    # - name: Configure Docker Client
    #   run: |-
    #     curl -fsSL "https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v2.1.14/docker-credential-gcr_linux_amd64-2.1.14.tar.gz" \
    #     | tar xz docker-credential-gcr \
    #     && chmod +x docker-credential-gcr && sudo mv docker-credential-gcr /usr/bin/
    #     docker-credential-gcr configure-docker --registries=$DOCKER_PKG_LOCATION
    #     gcloud auth configure-docker --quiet
    #     gcloud auth configure-docker $DOCKER_PKG_LOCATION --quiet
    #     gcloud auth print-access-token \
    #     --impersonate-service-account admin-ops-account@mt-2d-portal.iam.gserviceaccount.com | docker login \
    #     -u oauth2accesstoken \
    #     --password-stdin https://europe-west2-docker.pkg.dev
  